{"version":3,"sources":["components/Header.js","components/Home.js","components/TableRepresentation.js","components/BarChartRepresentation.js","components/Records.js","components/SearchPlayerProfile.js","components/NotFound.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Header","exact","activeClassName","to","React","Component","Home","className","TableRepresentation","columns","this","props","ColumnData","dataSource","ResultData","bordered","scroll","x","y","BarChartRepresentation","statisticString","undefined","Object","keys","width","height","data","dataKey","stroke","strokeDasharray","type","fill","barSize","Option","Select","typeofMatchData","typeofPlayerData","statisticsData","Batsman","Bowler","Fielder","mappingObject","Records","state","matchType","playerType","statisticsType","resultData","columnData","handleMatchChange","value","setState","handlePlayerChange","handleStatisticChange","handleSubmit","event","params","getKeyByValue","object","find","key","axios","get","then","response","map","result","index","name","player_name","matches","title","dataIndex","console","log","catch","error","defaultValue","style","onChange","match","player","statistic","onClick","length","SearchPlayerProfile","NotFound","align","Main","path","component","App","Boolean","window","location","hostname","routing","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48ac71de.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\nclass Header extends React.Component {\n    render() {\n        return (\n            <div>\n                <ul>\n                    <li>\n                        <NavLink exact activeClassName=\"active\" to=\"/WebScrapingAPI/\">Website Home</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact activeClassName=\"active\" to=\"/WebScrapingAPI/records\">Player Records</NavLink>\n                    </li>\n                    <li>\n                        <NavLink exact activeClassName=\"active\" to=\"/WebScrapingAPI/search\">Players Search</NavLink>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport '../App.css';\nconst Home = () => (\n    <div className=\"App\">\n        <h1>Welcome to Cricket Statistics App</h1>\n    </div>\n)\n\nexport default Home;","import React from 'react';\nimport { Table } from 'antd';\nclass TableRepresentation extends React.Component {\n    render() {\n        return (\n            <div>\n                <Table columns={this.props.ColumnData} dataSource={this.props.ResultData} bordered scroll={{ x: 'calc(700px + 50%)', y: 270 }} />\n            </div>\n        );\n    }\n}\n\nexport default TableRepresentation;\n","import React from 'react';\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip, Legend, CartesianGrid } from 'recharts';\n\nclass BarChartRepresentation extends React.Component {\n    render() {\n        let statisticString;\n        if(this.props.ResultData[0] !==  undefined) {\n            statisticString = Object.keys(this.props.ResultData[0])[3];\n        }\n        return (\n            <div>\n                <ResponsiveContainer width={'99%'} height={300}>\n                    <BarChart data={this.props.ResultData}>\n                        <XAxis dataKey=\"name\" stroke=\"#8884d8\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                        <Bar type=\"monotone\" dataKey={statisticString} fill=\"#8884d8\" barSize={30} />\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n        );\n    }\n}\n\nexport default BarChartRepresentation;","import React from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport TableRepresentation from './TableRepresentation';\nimport BarChartRepresentation from './BarChartRepresentation';\nimport { Select, Button } from 'antd';\n\nconst { Option } = Select;\nconst typeofMatchData = ['Tests', 'ODIs', 'T20Is'];\nconst typeofPlayerData = ['Batsman', 'Bowler', 'Fielder'];\nconst statisticsData = {\n    Batsman: ['Most Runs', 'Highest Scores', 'Best Batting Average', 'Best Batting Strike Rate', 'Most Hundreds', 'Most Fifties', 'Most Fours', 'Most Sixes', 'Most Not Outs'],\n    Bowler: ['Most Wickets', 'Best Bowling Average', 'Best Bowling', 'Most 5 Wickets Haul', 'Best Economy', 'Best Bowling Strike Rate'],\n    Fielder: ['Catches', 'Stumpings']\n};\n\nconst mappingObject = {\n    'Most Runs': 'Runs',\n    'Highest Scores': 'HS',\n    'Best Batting Average': 'Ave',\n    'Best Batting Strike Rate': 'SR',\n    'Most Hundreds': '100s',\n    'Most Fifties': '50s',\n    'Most Fours': '4s',\n    'Most Sixes': '6s',\n    'Most Not Outs': 'NO',\n    'Most Wickets': 'Wkts',\n    'Best Bowling Average': 'Bowl_Ave',\n    'Best Bowling': 'BBI',\n    'Most 5 Wickets Haul': '5w',\n    'Best Economy': 'Econ',\n    'Best Bowling Strike Rate': 'Bowl_SR',\n    'Catches': 'Ct',\n    'Stumpings': 'St'\n};\n\nclass Records extends React.Component {\n    state = {\n        matchType: typeofMatchData[0],\n        playerType: typeofPlayerData[0],\n        statisticsType: statisticsData[typeofPlayerData[0]][0],\n        resultData: [],\n        columnData: []\n    };\n\n    handleMatchChange = value => {\n        this.setState({\n            ...this.state,\n            matchType: value\n        });\n    };\n\n    handlePlayerChange = value => {\n        this.setState({\n            ...this.state,\n            playerType: value,\n            statisticsType: statisticsData[value][0]\n        });\n    };\n\n    handleStatisticChange = value => {\n        this.setState({\n            ...this.state,\n            statisticsType: value\n        });\n    };\n\n    handleSubmit = event => {\n\n        const params = {\n            matchType: this.state.matchType,\n            statisticsType: mappingObject[this.state.statisticsType]\n        }\n\n        function getKeyByValue(object, value) {\n            return Object.keys(object).find(key => object[key] === value);\n        }\n          \n        axios.get('https://5041b1f1.ngrok.io/api/players', { params })\n            .then((response) => {\n                this.setState({\n                    ...this.state,\n                    resultData: response.data.map((result, index) => ({\n                        key: index + 1,\n                        name: result.player_name,\n                        matches: result[params.matchType]['Mat'],\n                        [getKeyByValue(mappingObject, params.statisticsType)]: result[params.matchType][params.statisticsType]\n                    })),\n                    columnData: [\n                        {\n                            title: this.state.playerType,\n                            dataIndex: 'name',\n                            key: 'name'\n                        },\n                        {\n                            title: 'Matches',\n                            dataIndex: 'matches',\n                            key: 'matches'\n                        },\n                        {\n                            title: getKeyByValue(mappingObject, params.statisticsType),\n                            dataIndex: getKeyByValue(mappingObject, params.statisticsType),\n                            key: getKeyByValue(mappingObject, params.statisticsType)\n                        }\n                    ]\n                });\n                console.log(getKeyByValue(mappingObject, params.statisticsType));\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.resultData);   \n    }\n\n    render() {\n        return (\n            <div className=\"App\">  \n                <h1>Records Search</h1>\n                <div>\n                    <Select\n                        defaultValue={typeofMatchData[0]}\n                        style={{ width: 120 }}\n                        onChange={this.handleMatchChange}\n                    >\n                        {typeofMatchData.map(match => (\n                            <Select.Option key={match}>{match}</Select.Option>\n                        ))}\n                    </Select>\n                    <Select\n                        defaultValue={typeofPlayerData[0]}\n                        style={{ width: 120 }}\n                        onChange={this.handlePlayerChange}\n                    >\n                        {typeofPlayerData.map(player => (\n                            <Option key={player}>{player}</Option>\n                        ))}\n                    </Select>\n                    <Select\n                        style={{ width: 200 }}\n                        value={this.state.statisticsType}\n                        onChange={this.handleStatisticChange}\n                    >\n                        {statisticsData[this.state.playerType].map(statistic => (\n                            <Option key={statistic}>{statistic}</Option>\n                        ))}\n                    </Select>\n                    <Button type=\"primary\" onClick={this.handleSubmit}>Search</Button>\n                </div>\n                {this.state.resultData.length !== 0 ? \n                    <div>\n                        <h1>Table Representation</h1>\n                        <TableRepresentation ColumnData={this.state.columnData} ResultData={this.state.resultData} />\n                        <br />\n                        <h1>Bar Chart Representation</h1>\n                        <BarChartRepresentation ResultData={this.state.resultData} />  \n                    </div> \n                : null}\n\n            </div>\n        );\n    }\n}\n\nexport default Records;","import React from 'react';\nimport '../App.css';\nclass SearchPlayerProfile extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Player Search</h1>\n      </div>\n      \n    );\n  }\n}\nexport default SearchPlayerProfile;","import React from 'react'\nconst NotFound = () => <h1 align=\"center\">Page Not found</h1>\nexport default NotFound","import React from 'react';\nimport {Switch, Route} from 'react-router-dom';\nimport Home from './Home';\nimport Records from './Records';\nimport SearchPlayerProfile from './SearchPlayerProfile';\nimport NotFound from './NotFound';\nclass Main extends React.Component {\n    render() {\n        return (\n        <div>\n            <Switch>\n                <Route exact path=\"/WebScrapingAPI/\" component={Home} />\n                <Route path = \"/WebScrapingAPI/records\" component={Records} />\n                <Route path = \"/WebScrapingAPI/search\" component={SearchPlayerProfile} />\n                <Route component={NotFound} />\n            </Switch>\n        </div>\n        )\n    }\n}\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Headers from './components/Header';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <div>\n      <Headers />\n      <Main />  \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}